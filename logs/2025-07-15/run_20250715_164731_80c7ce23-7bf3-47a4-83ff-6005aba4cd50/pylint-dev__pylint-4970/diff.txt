Actual SWEBench dataset patch:

diff --git a/pylint/checkers/similar.py b/pylint/checkers/similar.py
--- a/pylint/checkers/similar.py
+++ b/pylint/checkers/similar.py
@@ -390,6 +390,8 @@ def append_stream(self, streamid: str, stream: TextIO, encoding=None) -> None:
 
     def run(self) -> None:
         """start looking for similarities and display results on stdout"""
+        if self.min_lines == 0:
+            return
         self._display_sims(self._compute_sims())
 
     def _compute_sims(self) -> List[Tuple[int, Set[LinesChunkLimits_T]]]:


Actual SWEBench dataset test patch:

diff --git a/tests/checkers/unittest_similar.py b/tests/checkers/unittest_similar.py
--- a/tests/checkers/unittest_similar.py
+++ b/tests/checkers/unittest_similar.py
@@ -502,3 +502,11 @@ def test_get_map_data() -> None:
         # There doesn't seem to be a faster way of doing this, yet.
         lines = (linespec.text for linespec in lineset_obj.stripped_lines)
         assert tuple(expected_lines) == tuple(lines)
+
+
+def test_set_duplicate_lines_to_zero() -> None:
+    output = StringIO()
+    with redirect_stdout(output), pytest.raises(SystemExit) as ex:
+        similar.Run(["--duplicates=0", SIMILAR1, SIMILAR2])
+    assert ex.value.code == 0
+    assert output.getvalue() == ""


My agent solution:

diff --git a/pylint/checkers/similar.py b/pylint/checkers/similar.py
index c65b1c893..6f0676c71 100644
--- a/pylint/checkers/similar.py
+++ b/pylint/checkers/similar.py
@@ -531,6 +531,8 @@ class Similar:
         """iterate on similarities among all files, by making a cartesian
         product
         """
+        if self.min_lines <= 0:
+            return
         for idx, lineset in enumerate(self.linesets[:-1]):
             for lineset2 in self.linesets[idx + 1 :]:
                 yield from self._find_common(lineset, lineset2)